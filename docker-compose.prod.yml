version: '3.8'

services:
  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: logengine-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-logengine}
      POSTGRES_USER: ${POSTGRES_USER:-logengine}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-logengine_password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-logengine}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - logengine-network
    restart: unless-stopped

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: logengine-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - logengine-network
    restart: unless-stopped

  # gRPC Server
  grpc-server:
    build:
      context: .
      dockerfile: Dockerfile.grpc
    container_name: logengine-grpc
    environment:
      DB_URI: postgres://${POSTGRES_USER:-logengine}:${POSTGRES_PASSWORD:-logengine_password}@postgres:5432/${POSTGRES_DB:-logengine}?sslmode=disable
      RABBITMQ_URI: amqp://${RABBITMQ_USER:-guest}:${RABBITMQ_PASSWORD:-guest}@rabbitmq:5672/
    ports:
      - "${GRPC_PORT:-30001}:30001"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - logengine-network
    restart: unless-stopped

  # HTTP Server
  http-server:
    build:
      context: .
      dockerfile: Dockerfile.http
    container_name: logengine-http
    environment:
      DB_URI: postgres://${POSTGRES_USER:-logengine}:${POSTGRES_PASSWORD:-logengine_password}@postgres:5432/${POSTGRES_DB:-logengine}?sslmode=disable
      RABBITMQ_URI: amqp://${RABBITMQ_USER:-guest}:${RABBITMQ_PASSWORD:-guest}@rabbitmq:5672/
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin123}
    ports:
      - "${HTTP_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - logengine-network
    restart: unless-stopped

networks:
  logengine-network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
